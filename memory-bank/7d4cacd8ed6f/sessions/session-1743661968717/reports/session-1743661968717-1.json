"HYPOTHESIS: The mother agent might be using Promise.all() to wait for multiple stream processing promises, but if any scenario agent crashes without properly closing its streams, the promise never resolves, causing the entire mother agent to hang.\nCONFIRMED: Yes\n\nINVESTIGATION:\n- Examined mother-agent.ts and related agent files\n- Found Promise.all() being used to wait for stdout and stderr streams\n- Confirmed that crashed scenario agents weren't properly closing their streams\n- Identified that stream promises weren't being properly rejected on process errors\n\nKey findings:\n1. The code was using Promise.all() to wait for both stdout and stderr streams\n2. No error handling for premature process termination\n3. No timeout mechanism for stream processing\n4. Stream promises could hang indefinitely if process crashed\n\nCHANGES MADE:\n1. Modified stream handling in mother-agent.ts:\n   - Wrapped Promise.all() in Promise.race()\n   - Added error handling for process crashes\n   - Added explicit handling of non-zero exit codes\n   - Ensures promises reject if process crashes or exits abnormally\n\nCONFIDENCE: High\n- The code pattern exactly matched the hypothesis\n- The issue is a well-known antipattern in Node.js stream handling\n- The fix follows established patterns for handling child process streams\n- Similar fixes have been proven effective in other Node.js applications\n\nThe changes should prevent the mother agent from hanging when scenario agents crash, as the Promise.race() will ensure we either get successful stream completion or proper error propagation from process crashes."